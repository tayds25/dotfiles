#!/usr/bin/env zsh
# =============================================================================
# ZSH Aliases and Functions
# =============================================================================
# This file contains all custom aliases and functions for zsh

# =============================================================================
# SYSTEM-SPECIFIC ALIASES
# =============================================================================

# Web development
alias web='cd /var/www/html'

# System management
alias shutdown='sudo poweroff'
alias rebootsafe='sudo shutdown -r now'
alias rebootforce='sudo shutdown -r -n now'

# Package management (Ubuntu/Debian focus)
alias apt-get='sudo apt-get'
alias packages='apt-cache search . | fzf --preview "apt-cache show {1}"'

# Service management aliases
alias hug="systemctl --user restart hugo"
alias lanm="systemctl --user restart lan-mouse"

# =============================================================================
# GENERAL PRODUCTIVITY ALIASES
# =============================================================================

# File operations (with safety features)
alias cp='cp -i'                           # Confirm before overwrite
alias mv='mv -i'                           # Confirm before overwrite
alias rm='trash -v'                        # Use trash instead of rm
alias mkdir='mkdir -p'                     # Create parent directories

# Enhanced ls commands
alias ls='ls -aFh --color=always'          # Basic colorized listing
alias la='ls -Alh'                         # Show all files including hidden
alias ll='ls -Fls'                         # Long listing format
alias lx='ls -lXBh'                        # Sort by extension
alias lk='ls -lSrh'                        # Sort by size
alias lc='ls -ltcrh'                       # Sort by change time
alias lu='ls -lturh'                       # Sort by access time
alias lr='ls -lRh'                         # Recursive listing
alias lt='ls -ltrh'                        # Sort by date
alias lm='ls -alh | more'                  # Pipe through more
alias lw='ls -xAh'                         # Wide listing format
alias labc='ls -lap'                       # Alphabetical sort
alias lf="ls -l | egrep -v '^d'"           # Files only
alias ldir="ls -l | egrep '^d'"            # Directories only

# Directory navigation
alias ..='cd ..'                           # Go up one directory
alias ...='cd ../..'                       # Go up two directories
alias ....='cd ../../..'                   # Go up three directories
alias .....='cd ../../../..'               # Go up four directories
alias bd='cd "$OLDPWD"'                    # Go to previous directory
alias home='cd ~'                          # Go to home directory

# System information & monitoring
alias ps='ps auxf'                         # Enhanced process list
alias ping='ping -c 10'                    # Limit ping to 10 packets
alias openports='netstat -nape --inet'     # Show open network ports
alias topcpu="/bin/ps -eo pcpu,pid,user,args | sort -k 1 -r | head -10"

# File permissions
alias mx='chmod a+x'                       # Make executable
alias 000='chmod -R 000'                   # No permissions
alias 644='chmod -R 644'                   # Read/write for owner, read for others
alias 666='chmod -R 666'                   # Read/write for all
alias 755='chmod -R 755'                   # Full for owner, read/execute for others
alias 777='chmod -R 777'                   # Full permissions for all

# Archive operations
alias mktar='tar -cvaf'                    # Create archive (auto-detect compression)
alias untar='tar -xvaf'                    # Extract archive (auto-detect compression)
alias mktr='tar -cvf'                      # Create tar
alias mkbz2='tar -cvjf'                    # Create bzip2
alias mkgz='tar -cvzf'                     # Create gzip
alias unbz2='tar -xvjf'                    # Extract bzip2
alias ungz='tar -xvzf'                     # Extract gzip

# Text processing and search
alias less='less -R'                       # Enable color in less
alias h="history | grep"                   # Search command history
alias p="ps aux | grep"                    # Search running processes
alias f="find . | grep"                    # Search files in current directory
alias ftext='grep -iIHrn --color=always'   # Search text in files

# System utilities
alias cls='clear'                          # Clear screen
alias da='date "+%Y-%m-%d %A %T %Z"'       # Show formatted date
alias diskspace="du -S | sort -n -r | more" # Show disk usage
alias folders='du -h --max-depth=1'        # Show folder sizes
alias mountedinfo='df -hT'                 # Show mounted filesystems
alias tree='tree -CAhF --dirsfirst'        # Enhanced tree view
alias treed='tree -CAFd'                   # Tree view (directories only)

# Development tools
alias nv='nvim'                            # Use neovim instead of vi
alias vim='nvim'                           # Use neovim instead of vim
alias nano='micro'                         # Use micro instead of nano
alias svi='sudo nvim'                      # Sudo vi
alias spico='sudo pico'                    # Sudo pico
alias snano='sudo nano'                    # Sudo nano

# Network utilities
alias whatismyip="whatsmyip"               # IP address lookup

# Docker utilities
alias docker-clean='docker container prune -f; docker image prune -f; docker network prune -f; docker volume prune -f'

# =============================================================================
# TOOL-SPECIFIC CONFIGURATIONS
# =============================================================================

# Use ripgrep if available, otherwise fall back to grep
if command -v rg &> /dev/null; then
    alias grep='rg'
else
    alias grep="/usr/bin/grep --color=auto"
fi

# Use bat/batcat for syntax highlighting (distribution-specific)
if command -v bat &> /dev/null; then
    alias cat='bat'
elif command -v batcat &> /dev/null; then
    alias cat='batcat'
fi

# FZF enhanced aliases
alias fzfp='fzf --height 100% --preview "bat --style=plain --color=always {}"'
alias fzfcode='code "$(fzf --height 100% --preview "bat --style=plain --color=always {}")"'

# =============================================================================
# CUSTOM FUNCTIONS
# =============================================================================

# Extract various archive formats
extract() {
    for archive in "$@"; do
        if [[ -f "$archive" ]]; then
            case $archive in
                *.tar.bz2) tar xvjf $archive ;;
                *.tar.gz) tar xvzf $archive ;;
                *.bz2) bunzip2 $archive ;;
                *.rar) rar x $archive ;;
                *.gz) gunzip $archive ;;
                *.tar) tar xvf $archive ;;
                *.tbz2) tar xvjf $archive ;;
                *.tgz) tar xvzf $archive ;;
                *.zip) unzip $archive ;;
                *.Z) uncompress $archive ;;
                *.7z) 7z x $archive ;;
                *) echo "Don't know how to extract '$archive'..." ;;
            esac
        else
            echo "'$archive' is not a valid file!"
        fi
    done
}

# Navigate up multiple directories (usage: up 3)
up() {
    local d=""
    local limit=$1
    for ((i=1; i<=limit; i++)); do
        d="$d/.."
    done
    d=${d#/}
    if [[ -z "$d" ]]; then
        d=".."
    fi
    cd $d
}

# Create directory and navigate to it
mkdirg() {
    mkdir -p "$1" && cd "$1"
}

# Copy file and navigate to destination (if directory)
cpg() {
    if [[ -d "$2" ]]; then
        cp "$1" "$2" && cd "$2"
    else
        cp "$1" "$2"
    fi
}

# Move file and navigate to destination (if directory)
mvg() {
    if [[ -d "$2" ]]; then
        mv "$1" "$2" && cd "$2"
    else
        mv "$1" "$2"
    fi
}

# Get IP addresses (internal and external)
whatsmyip() {
    echo -n "Internal IP: "
    if command -v ip &> /dev/null; then
        ip addr show $(ip route | awk '/default/ {print $5}' | head -n1) | grep "inet " | awk '{print $2}' | cut -d/ -f1
    else
        ifconfig | grep "inet " | grep -v "127.0.0.1" | awk '{print $2}' | head -n1
    fi

    echo -n "External IP: "
    curl -s -4 ifconfig.me && echo
}

# Count files in directory
countfiles() {
    for t in files links directories; do
        echo $(find . -type ${t:0:1} | wc -l) $t
    done 2> /dev/null
}

# Git shortcuts
gcom() {
    git add .
    git commit -m "$1"
}

lazyg() {
    git add .
    git commit -m "$1"
    git push
}

# Yazi file manager with directory change
y() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    local cwd
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [[ -n "$cwd" ]] && [[ "$cwd" != "$PWD" ]]; then
        builtin cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}

# FZF directory navigation
fzfdir() {
    local selected_file=$(fzf --height 80%)
    if [[ -n "$selected_file" ]]; then
        nemo "$(dirname "$selected_file")" & disown
    fi
}

# Hastebin-like service
hb() {
    if [[ $# -eq 0 ]]; then
        echo "No file path specified."
        return 1
    elif [[ ! -f "$1" ]]; then
        echo "File path does not exist."
        return 1
    fi

    local uri="http://bin.christitus.com/documents"
    local response=$(curl -s -X POST -d @"$1" "$uri")
    if [[ $? -eq 0 ]]; then
        local hasteKey=$(echo $response | jq -r '.key')
        echo "http://bin.christitus.com/$hasteKey"
    else
        echo "Failed to upload the document."
    fi
}

# Get current Linux distribution type
distribution() {
    local dtype="unknown"

    if [[ -r /etc/os-release ]]; then
        source /etc/os-release
        case $ID in
            fedora|rhel|centos) dtype="redhat" ;;
            sles|opensuse*) dtype="suse" ;;
            ubuntu|debian) dtype="debian" ;;
            gentoo) dtype="gentoo" ;;
            arch|manjaro) dtype="arch" ;;
            slackware) dtype="slackware" ;;
            *)
                if [[ -n "$ID_LIKE" ]]; then
                    case $ID_LIKE in
                        *fedora*|*rhel*|*centos*) dtype="redhat" ;;
                        *sles*|*opensuse*) dtype="suse" ;;
                        *ubuntu*|*debian*) dtype="debian" ;;
                        *gentoo*) dtype="gentoo" ;;
                        *arch*) dtype="arch" ;;
                        *slackware*) dtype="slackware" ;;
                    esac
                fi
                ;;
        esac
    fi
    echo $dtype
}

# Show OS version information
ver() {
    local dtype=$(distribution)

    case $dtype in
        "redhat")
            [[ -s /etc/redhat-release ]] && cat /etc/redhat-release || cat /etc/issue
            uname -a
            ;;
        "suse") cat /etc/SuSE-release ;;
        "debian") lsb_release -a ;;
        "gentoo") cat /etc/gentoo-release ;;
        "arch") cat /etc/os-release ;;
        "slackware") cat /etc/slackware-version ;;
        *)
            [[ -s /etc/issue ]] && cat /etc/issue || echo "Error: Unknown distribution"
            ;;
    esac
}

# Auto-ls after cd (zsh-specific implementation)
chpwd() {
    ls
}

# Set terminal title to last 2 directory levels
set_terminal_title() {
    local dir

    if [[ $PWD == "$HOME" || $PWD == "$HOME/" ]]; then
        dir="~"
    elif [[ $PWD == "/" ]]; then
        dir="/"
    elif [[ $PWD == "$HOME/"* ]]; then
        local rel=${PWD#$HOME/}
        local base=${rel##*/}
        if [[ $rel == */* ]]; then
            local parent=${rel%/*}; parent=${parent##*/}
            dir="~/$parent/$base"
        else
            dir="~/$base"
        fi
    else
        local base=${PWD##*/}
        if [[ $PWD == */* && ${PWD%/*} != "/" ]]; then
            local parent=${PWD%/*}; parent=${parent##*/}
            dir="$parent/$base"
        else
            dir="$base"
        fi
    fi

    printf '\033]0;%s\007\033]2;%s\007' "$dir" "$dir"
}
